@using Interfleet.XIUserManagement.Models
@using Microsoft.AspNetCore.Http;
@model Tuple<List<Users>, Search,Pager>

@{
    ViewData["Title"] = "Index";

    Pager pager = new Pager();
    int pageNo = 0;
    if (ViewBag.SearchPager != null)
    {
        pager = ViewBag.SearchPager;
        pageNo = pager.CurrentPage;
    }

}

<style>
    .users {
        table-layout: fixed;
        width: 100%;
        white-space: nowrap;
        border-collapse: collapse;
        border-spacing: 20px 0;
    }

    th {
        background-color: #0d6efd;
        color: white;
        width: 15%;
    }

    th,
    .users td {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        border: 0.5px dotted lightgrey;
        padding: 5px;
    }

    /* Column widths are based on these cells */
    .row-ID {
        width: 10%;
    }

    .row-name {
        width: 10%;
    }

    .row-company {
        width: 10%;
    }

    .row-comments {
        width: 25%;
    }

    .row-admin {
        width: 8%;
    }
    .btn-user {
        color: white;
        background-color: #0d6efd;
        border-color: blue;
    }
</style>
<div>
    <div class="container btn-group" border-radius: 25px; height:30px;">
        <div class="col-4 p-0 justify-content-end mt-1">
            <h5>List of Users</h5>
            <a class='btn btn-user btn-sm' href='/Home/Index'>Home</a>
        </div>
    </div>
    <partial name="_search" model="@pager" />

    @if (Model.Item2 != null && Model.Item2.ErrorMessage != null && Model.Item2.ErrorMessage.Length > 0)
    {
        <strong class="text-danger">@Model.Item2.ErrorMessage</strong>

    }

    <br />
    <table class="users" style="border-color:white">
        <thead class="col-4 p-0 justify-content-end mt-1">
            <tr class="col-4 p-0 justify-content-end mt-1">
                <th><a class="row-2 row-name text-light" asp-controller="User" asp-action="Index" asp-route-sortOrder=@ViewData[Search.sortOrderUserNameParam] asp-route-SearchValue="@Model.Item3.SearchValue" asp-route-SearchBy="@Model.Item3.SearchBy" asp-route-pageSize="@Model.Item3.PageSize">Name</a></th>
                <th><a class="row-3 row-company text-light" asp-controller="User" asp-action="Index" asp-route-sortOrder=@ViewData[Search.sortOrderCompanyParam] asp-route-SearchValue="@Model.Item3.SearchValue" asp-route-SearchBy="@Model.Item3.SearchBy" asp-route-pageSize="@Model.Item3.PageSize">Company</a></th>
                <th class="row-4 row-comments text-light">Comments</th>
                <th class="row-4 row-admin text-light">Admin</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Item1)
            {
                <tr>
                    <td>@item.UserName</td>
                    <td>@item.Company</td>
                    <td>@item.Comments</td>
                    <td>@(item.IsAdmin ? "Yes" : "No")</td>
                    <td style="border-color:white">
                        <a class="btn btn-user btn" asp-route-SearchValue="@Model.Item3.SearchValue" asp-route-SearchBy="@Model.Item3.SearchBy" asp-route-pageSize="@Model.Item3.PageSize" asp-controller="User" asp-action="View" asp-route-userId="@item.UserId">View</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="container btn-group" border-radius: 25px; height:30px;">
        <div class="col-4 p-0 justify-content-end mt-5">
            <partial name="_pager" model="@pager" />
        </div>
    </div>

    <script>
        function DisableBackButton() {
            window.history.forward()
        }
        DisableBackButton();
        window.onload = DisableBackButton;
        window.onpageshow = function (evt) { if (evt.persisted) DisableBackButton() }
        window.onload = function () { void (0) }
    </script>
</div>
